apiVersion: v1
kind: Template
metadata:
  name: skydive
objects:
- apiVersion: v1
  kind: Service
  metadata:
    labels:
      app: skydive-analyzer
    name: skydive-analyzer
  spec:
    ports:
    - name: api
      port: 8082
      protocol: TCP
      targetPort: 8082
    - name: protobuf
      port: 8082
      protocol: UDP
      targetPort: 8082
    - name: etcd
      port: 12379
      protocol: TCP
      targetPort: 12379
    - name: etcd-cluster
      port: 12380
      protocol: TCP
      targetPort: 12380
    - name: es
      port: 9200
      protocol: TCP
      targetPort: 9200
    selector:
      app: skydive
      tier: analyzer
    sessionAffinity: None
    type: NodePort
- apiVersion: v1
  kind: DeploymentConfig
  metadata:
    name: skydive-analyzer
  spec:
    replicas: 1
    selector:
      app: skydive
      tier: analyzer
    strategy:
      rollingParams:
        intervalSeconds: 1
        maxSurge: 25%
        maxUnavailable: 25%
        timeoutSeconds: 600
        updatePeriodSeconds: 1
      type: Rolling
    template:
      metadata:
        labels:
          app: skydive
          tier: analyzer
      spec:
        containers:
        - args:
          - analyzer
          - --listen=0.0.0.0:8082
          env:
          - name: SKYDIVE_ANALYZER_FLOW_BACKEND
            value: elasticsearch
          - name: SKYDIVE_ANALYZER_TOPOLOGY_BACKEND
            value: elasticsearch
          - name: SKYDIVE_ANALYZER_TOPOLOGY_PROBES
            value: ${SKYDIVE_ANALYZER_TOPOLOGY_PROBES}
          - name: SKYDIVE_ANALYZER_TOPOLOGY_K8S_PROBES
            value: ${SKYDIVE_ANALYZER_TOPOLOGY_K8S_PROBES}
          - name: SKYDIVE_ETCD_LISTEN
            value: 0.0.0.0:12379
          - name: SKYDIVE_LOGGING_LEVEL
            value: ${SKYDIVE_LOGGING_LEVEL}
          image: skydive/skydive
          imagePullPolicy: Always
          livenessProbe:
            failureThreshold: 3
            tcpSocket:
              port: 8082
            initialDelaySeconds: 30
            periodSeconds: 10
            successThreshold: 1
            timeoutSeconds: 5
          name: skydive-analyzer
          ports:
          - containerPort: 8082
            protocol: TCP
          - containerPort: 8082
            protocol: UDP
          - containerPort: 12379
            protocol: TCP
          - containerPort: 12380
            protocol: TCP
          readinessProbe:
            failureThreshold: 1
            tcpSocket:
              port: 8082
            initialDelaySeconds: 30
            periodSeconds: 10
            successThreshold: 1
            timeoutSeconds: 5
        - image: elasticsearch:5
          imagePullPolicy: IfNotPresent
          livenessProbe:
            failureThreshold: 3
            tcpSocket:
              port: 9200
            initialDelaySeconds: 30
            periodSeconds: 10
            successThreshold: 1
            timeoutSeconds: 5
          name: skydive-elasticsearch
          ports:
          - containerPort: 9200
            protocol: TCP
          readinessProbe:
            failureThreshold: 1
            tcpSocket:
              port: 9200
            initialDelaySeconds: 30
            periodSeconds: 10
            successThreshold: 1
            timeoutSeconds: 5
          securityContext:
            privileged: true
        dnsPolicy: ClusterFirst
        restartPolicy: Always
        terminationGracePeriodSeconds: 30
    test: false
    triggers:
    - type: ConfigChange
- apiVersion: extensions/v1beta1
  kind: DaemonSet
  metadata:
    labels:
      app: skydive
      tier: agent
    name: skydive-agent
  spec:
    selector:
      matchLabels:
        app: skydive
        tier: agent
    template:
      metadata:
        labels:
          app: skydive
          tier: agent
      spec:
        containers:
        - args:
          - agent
          env:
          - name: SKYDIVE_ANALYZERS
            value: $(SKYDIVE_ANALYZER_SERVICE_HOST):$(SKYDIVE_ANALYZER_SERVICE_PORT_API)
          - name: SKYDIVE_LOGGING_LEVEL
            value: ${SKYDIVE_LOGGING_LEVEL}
          - name: SKYDIVE_AGENT_TOPOLOGY_PROBES
            value: "ovsdb runc docker"
          - name: SKYDIVE_RUNC_PATH
            value: "/run/containerd/runc /run/runc /run/runc-ctrs"
          image: skydive/skydive
          imagePullPolicy: Always
          name: skydive-agent
          ports:
          - containerPort: 8081
            hostPort: 8081
            protocol: TCP
          securityContext:
            privileged: true
          volumeMounts:
          - mountPath: /run/docker.sock
            name: docker
          - mountPath: /run/netns
            name: netns
          - mountPath: /run/openvswitch/db.sock
            name: ovsdb
          - mountPath: /run/runc
            name: runc
          - mountPath: /run/runc-ctrs
            name: runc-ctrs
          - mountPath: /run/containerd/runc
            name: containerd-runc
        dnsPolicy: ClusterFirst
        hostNetwork: true
        hostPID: true
        restartPolicy: Always
        terminationGracePeriodSeconds: 30
        volumes:
        - hostPath:
            path: /run/docker.sock
          name: docker
        - hostPath:
            path: /run/netns
          name: netns
        - hostPath:
            path: /run/runc
          name: runc
        - hostPath:
            path: /run/runc-ctrs
          name: runc-ctrs
        - hostPath:
            path: /run/containerd/runc
          name: containerd-runc
        - hostPath:
            path: /run/openvswitch/db.sock
          name: ovsdb
- apiVersion: v1
  kind: Route
  metadata:
    labels:
      app: skydive-analyzer
    name: skydive-analyzer
  spec:
    port:
      targetPort: api
    tls:
      termination: edge
    to:
      kind: Service
      name: skydive-analyzer
      weight: 100
    wildcardPolicy: None
parameters:
- description: Loglevel of Skydive agent and analyzer
  displayName: Loglevel
  name: SKYDIVE_LOGGING_LEVEL
  required: true
  value: INFO
- description: Topology probes for anaylyser, default is empty. Add 'k8s' to add k8s/openshift objects to skydive
  displayName: Analyzer topology probes
  name: SKYDIVE_ANALYZER_TOPOLOGY_PROBES
  required: false
  value: ""
- description: Probes for k8s/openshift, default is empty. If you only want same objects add those objects, for examples "namespace cluster service pod node"
  displayName: K8s/OpenShift probes
  name: SKYDIVE_ANALYZER_TOPOLOGY_K8S_PROBES
  required: false
  value: ""
