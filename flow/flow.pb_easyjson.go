// TEMPORARY AUTOGENERATED FILE: easyjson stub code to make the package
// compilable during generation.

package  flow

import (
  "github.com/mailru/easyjson/jwriter"
  "github.com/mailru/easyjson/jlexer"
)

func ( Flow ) MarshalJSON() ([]byte, error) { return nil, nil }
func (* Flow ) UnmarshalJSON([]byte) error { return nil }
func ( Flow ) MarshalEasyJSON(w *jwriter.Writer) {}
func (* Flow ) UnmarshalEasyJSON(l *jlexer.Lexer) {}

type EasyJSON_exporter_Flow *Flow

func ( FlowLayer ) MarshalJSON() ([]byte, error) { return nil, nil }
func (* FlowLayer ) UnmarshalJSON([]byte) error { return nil }
func ( FlowLayer ) MarshalEasyJSON(w *jwriter.Writer) {}
func (* FlowLayer ) UnmarshalEasyJSON(l *jlexer.Lexer) {}

type EasyJSON_exporter_FlowLayer *FlowLayer

func ( FlowMetric ) MarshalJSON() ([]byte, error) { return nil, nil }
func (* FlowMetric ) UnmarshalJSON([]byte) error { return nil }
func ( FlowMetric ) MarshalEasyJSON(w *jwriter.Writer) {}
func (* FlowMetric ) UnmarshalEasyJSON(l *jlexer.Lexer) {}

type EasyJSON_exporter_FlowMetric *FlowMetric

func ( FlowSearchReply ) MarshalJSON() ([]byte, error) { return nil, nil }
func (* FlowSearchReply ) UnmarshalJSON([]byte) error { return nil }
func ( FlowSearchReply ) MarshalEasyJSON(w *jwriter.Writer) {}
func (* FlowSearchReply ) UnmarshalEasyJSON(l *jlexer.Lexer) {}

type EasyJSON_exporter_FlowSearchReply *FlowSearchReply

func ( FlowSet ) MarshalJSON() ([]byte, error) { return nil, nil }
func (* FlowSet ) UnmarshalJSON([]byte) error { return nil }
func ( FlowSet ) MarshalEasyJSON(w *jwriter.Writer) {}
func (* FlowSet ) UnmarshalEasyJSON(l *jlexer.Lexer) {}

type EasyJSON_exporter_FlowSet *FlowSet

func ( ICMPLayer ) MarshalJSON() ([]byte, error) { return nil, nil }
func (* ICMPLayer ) UnmarshalJSON([]byte) error { return nil }
func ( ICMPLayer ) MarshalEasyJSON(w *jwriter.Writer) {}
func (* ICMPLayer ) UnmarshalEasyJSON(l *jlexer.Lexer) {}

type EasyJSON_exporter_ICMPLayer *ICMPLayer

func ( IPMetric ) MarshalJSON() ([]byte, error) { return nil, nil }
func (* IPMetric ) UnmarshalJSON([]byte) error { return nil }
func ( IPMetric ) MarshalEasyJSON(w *jwriter.Writer) {}
func (* IPMetric ) UnmarshalEasyJSON(l *jlexer.Lexer) {}

type EasyJSON_exporter_IPMetric *IPMetric

func ( Message ) MarshalJSON() ([]byte, error) { return nil, nil }
func (* Message ) UnmarshalJSON([]byte) error { return nil }
func ( Message ) MarshalEasyJSON(w *jwriter.Writer) {}
func (* Message ) UnmarshalEasyJSON(l *jlexer.Lexer) {}

type EasyJSON_exporter_Message *Message

func ( RawPacket ) MarshalJSON() ([]byte, error) { return nil, nil }
func (* RawPacket ) UnmarshalJSON([]byte) error { return nil }
func ( RawPacket ) MarshalEasyJSON(w *jwriter.Writer) {}
func (* RawPacket ) UnmarshalEasyJSON(l *jlexer.Lexer) {}

type EasyJSON_exporter_RawPacket *RawPacket

func ( Stats ) MarshalJSON() ([]byte, error) { return nil, nil }
func (* Stats ) UnmarshalJSON([]byte) error { return nil }
func ( Stats ) MarshalEasyJSON(w *jwriter.Writer) {}
func (* Stats ) UnmarshalEasyJSON(l *jlexer.Lexer) {}

type EasyJSON_exporter_Stats *Stats

func ( TCPMetric ) MarshalJSON() ([]byte, error) { return nil, nil }
func (* TCPMetric ) UnmarshalJSON([]byte) error { return nil }
func ( TCPMetric ) MarshalEasyJSON(w *jwriter.Writer) {}
func (* TCPMetric ) UnmarshalEasyJSON(l *jlexer.Lexer) {}

type EasyJSON_exporter_TCPMetric *TCPMetric

func ( TableQuery ) MarshalJSON() ([]byte, error) { return nil, nil }
func (* TableQuery ) UnmarshalJSON([]byte) error { return nil }
func ( TableQuery ) MarshalEasyJSON(w *jwriter.Writer) {}
func (* TableQuery ) UnmarshalEasyJSON(l *jlexer.Lexer) {}

type EasyJSON_exporter_TableQuery *TableQuery

func ( TableReply ) MarshalJSON() ([]byte, error) { return nil, nil }
func (* TableReply ) UnmarshalJSON([]byte) error { return nil }
func ( TableReply ) MarshalEasyJSON(w *jwriter.Writer) {}
func (* TableReply ) UnmarshalEasyJSON(l *jlexer.Lexer) {}

type EasyJSON_exporter_TableReply *TableReply

func ( TransportLayer ) MarshalJSON() ([]byte, error) { return nil, nil }
func (* TransportLayer ) UnmarshalJSON([]byte) error { return nil }
func ( TransportLayer ) MarshalEasyJSON(w *jwriter.Writer) {}
func (* TransportLayer ) UnmarshalEasyJSON(l *jlexer.Lexer) {}

type EasyJSON_exporter_TransportLayer *TransportLayer
