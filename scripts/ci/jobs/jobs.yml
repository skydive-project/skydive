- scm:
    name: skydive-github
    scm:
      - git:
          url: "{repository}"
          browser: githubweb
          browser-url: "{repository}"
          timeout: 20
          basedir: src/github.com/skydive-project/skydive
          per-build-tag: false
          skip-tag: true
          refspec: "{refspec}"
          branches:
            - "{ref}"

- trigger:
    name: skydive-pull-request
    triggers:
      - github-pull-request:
          org-list:
            - skydive-project
          github-hooks: true
          allow-whitelist-orgs-as-admins: false
          trigger-phrase: '.*(re)?run ({trigger-prefix}tests|(skydive-)?{name}).*'
          skip-build-phrase: '.*skip (skydive-)?{name}.*'
          cancel-builds-on-update: "{cancel-builds-on-update}"
          only-trigger-phrase: "{only-trigger-phrase}"
          status-context: "skydive-{name}"
          black-list-labels:
            - no-ci
          white-list: []

- publisher:
    name: publish-cobertura
    publishers:
      - cobertura:
          report-file: "cover.out.xml"
          targets:
            - packages:
                healthy: 7000000
                unhealthy: 5000000
                failing: 3000000
            - files:
                healthy: 7000000
                unhealthy: 5000000
                failing: 3000000
            - classes:
                healthy: 7000000
                unhealthy: 5000000
                failing: 3000000
            - method:
                healthy: 7000000
                unhealthy: 5000000
                failing: 3000000

- wrapper:
    name: github-credentials
    wrappers:
      - credentials-binding:
          - text:
              credential-id: github-token
              variable: GITHUB_TOKEN
          - text:
              credential-id: github-username
              variable: GITHUB_USERNAME

- wrapper:
    name: docker-credentials
    wrappers:
      - credentials-binding:
          - text:
              credential-id: docker-password
              variable: DOCKER_PASSWORD

- wrapper:
    name: copr-credentials
    wrappers:
      - credentials-binding:
          - text:
              credential-id: copr-login
              variable: COPR_LOGIN
          - text:
              credential-id: copr-token
              variable: COPR_TOKEN

- wrapper:
    name: quay-credentials
    wrappers:
      - credentials-binding:
          - text:
              credential-id: quay-login
              variable: QUAY_LOGIN
          - text:
              credential-id: quay-token
              variable: QUAY_TOKEN

- wrapper:
    name: coverage-credentials
    wrappers:
      - credentials-binding:
          - text:
              credential-id: codecov-token
              variable: CODECOV_TOKEN
          - text:
              credential-id: coveralls-token
              variable: COVERALLS_TOKEN

- wrapper:
    name: skydive-wrappers
    wrappers:
      - ansicolor:
          colormap: gnome-terminal
      - timeout:
          timeout: 300
          fail: true
          type: absolute
      - timestamps
      - github-pull-request:
          status-url: http://ci-logs.skydive.network/logs/${JOB_NAME}/${BUILD_NUMBER}
          status-context: ${JOB_NAME}

- publisher:
    name: skydive-publishers
    publishers:
      - chuck-norris
      - slack:
          team-domain: skydive-project
          auth-token-credential-id: slack-token
          room: #ci-cd
          notify-success: true
          notify-every-failure: true

- builder:
    name: skydive-cleanup
    builders:
      - shell: |
          #!/bin/bash
          cd src/github.com/skydive-project/skydive
          [ -d /var/tmp/skydive-cleanup ] || sudo scripts/ci/cleanup.sh init
          sudo scripts/ci/cleanup.sh snapshot
          sudo scripts/ci/cleanup.sh cleanup

- builder:
    name: skydive-test
    builders:
      - shell: |
          #!/bin/bash
          cd src/github.com/skydive-project/skydive
          . scripts/ci/install-go.sh
          [[ "$ghprbCommentBody" = *"insanelock"* ]] && export TAGS=mutexdebug
          [[ "$ghprbCommentBody" = *"profile"* ]] && export WITH_PROF=true
          [[ "$ghprbPullLongDescription" = *"pattern="* ]] && export TEST_PATTERN=`expr match "$ghprbPullLongDescription" '^.*pattern=\(.*\)$'`
          [[ "$ghprbCommentBody" = *"pattern="* ]] && export TEST_PATTERN=`expr match "$ghprbCommentBody" '^.*pattern=\(.*\)$'`
          {test}

- parameter:
    name: skydive-parameters
    parameters:
      - string:
          name: REPOSITORY
          default: "{repository}"
          description: URL of the Git repository to use
      - string:
          name: REF
          default: "{ref}"
          description: "The tag or branch to build (ex: origin/pr/1234/merge for the PR 1234, v0.20.1 for the corresponding tag or devel for the branch named devel)"
      - string:
          name: REFSPEC
          default: "{refspec}"
          description: "Refspec (ex: +refs/pull/*:refs/remotes/origin/pr/* for a PR, +refs/tags/*:refs/remotes/origin/tags/* for a tag, +refs/heads/*:refs/remotes/origin/* for a branch)"
      - string:
          name: DRY_RUN
          default: "{dry-run}"
          description: If specified, do not upload anything
      - string:
          name: KEEP_RESOURCES
          default: "{keep-resources}"
          description: Keep resources at the end of the test

- parameter:
    name: skydive-labels
    parameters:
      - label:
          name: SLAVE_NAME
          default: "{slave-name}"
          description: "The node on which to run the job"

- parameter:
    name: skydive-default-parameters
    parameters:
      - skydive-parameters:
          repository: https://github.com/skydive-project/skydive
          ref: "${sha1}"
          refspec: "+refs/pull/*:refs/remotes/origin/pr/*"
          dry-run: "true"
          keep-resources: ""

- defaults:
    name: skydive
    project-type: freestyle
    concurrent: true
    parameters:
      - skydive-default-parameters
      - skydive-labels:
          slave-name: "slaves"
    properties:
      - github:
          url: https://github.com/skydive-project/skydive
      - inject:
          properties-content: MINIKUBE_DRIVER=virtualbox
      - build-discarder:
          artifact-num-to-keep: 100
    scm:
      - skydive-github:
          repository: "${REPOSITORY}"
          ref: "${REF}"
          refspec: "${REFSPEC}"
    wrappers:
      - skydive-wrappers
    publishers:
      - skydive-publishers

- job:
    name: skydive-go-fmt
    defaults: skydive
    triggers:
      - skydive-pull-request:
          name: go-fmt
          trigger-prefix: "(all )?"
          only-trigger-phrase: false
          cancel-builds-on-update: true
    builders:
      - skydive-test:
          test: scripts/ci/run-go-fmt.sh

- job:
    name: skydive-unit-tests
    defaults: skydive
    triggers:
      - skydive-pull-request:
          name: unit-tests
          trigger-prefix: "(all )?"
          only-trigger-phrase: false
          cancel-builds-on-update: true
    builders:
      - skydive-test:
          test: scripts/ci/run-unit-tests.sh
    publishers:
      - junit:
          results: tests.xml
      - skydive-publishers

- job:
    name: skydive-compile-tests
    defaults: skydive
    triggers:
      - skydive-pull-request:
          name: compile-tests
          trigger-prefix: "(all )?"
          only-trigger-phrase: false
          cancel-builds-on-update: true
    builders:
      - skydive-test:
          test: scripts/ci/run-compile-tests.sh

- job:
    name: skydive-k8s-tests
    defaults: skydive
    wrappers:
      - skydive-wrappers
      - timeout:
          timeout: 40
          fail: true
          type: absolute
    triggers:
      - skydive-pull-request:
          name: k8s-tests
          trigger-prefix: "(all )?"
          only-trigger-phrase: false
          cancel-builds-on-update: true
    parameters:
      - skydive-default-parameters
      - skydive-labels:
          slave-name: baremetal
    builders:
      - skydive-cleanup
      - skydive-test:
          test: BACKEND=elasticsearch scripts/ci/run-istio-tests.sh
    publishers:
      - junit:
          results: tests.xml
      - skydive-publishers

- job:
    name: skydive-helm-tests
    defaults: skydive
    parameters:
      - skydive-default-parameters
      - skydive-labels:
          slave-name: baremetal
    concurrent: true
    triggers:
      - skydive-pull-request:
          name: helm-tests
          trigger-prefix: "all "
          cancel-builds-on-update: true
          only-trigger-phrase: true
    builders:
      - skydive-test:
          test: scripts/ci/run-helm-tests.sh
    publishers:
      - junit:
          results: tests.xml
      - skydive-publishers

- job:
    name: skydive-opencontrail-tests
    defaults: skydive
    parameters:
      - skydive-default-parameters
      - skydive-labels:
          slave-name: baremetal
    triggers:
      - skydive-pull-request:
          name: opencontrail-tests
          trigger-prefix: "(all )?"
          only-trigger-phrase: true
          cancel-builds-on-update: false
    builders:
      - skydive-test:
          test: scripts/ci/run-opencontrail-tests.sh

- job:
    name: skydive-functional-tests-backend-elasticsearch
    defaults: skydive
    triggers:
      - skydive-pull-request:
          name: functional-tests-backend-elasticsearch
          trigger-prefix: "(all )?"
          only-trigger-phrase: false
          cancel-builds-on-update: true
    builders:
      - skydive-cleanup
      - skydive-test:
          test: BACKEND=elasticsearch WITH_DOCKER_VPP=true ARGS="-ovs.oflow.native" scripts/ci/run-functional-tests.sh
    publishers:
      - junit:
          results: tests.xml
      - skydive-publishers

- job:
    name: skydive-functional-tests-backend-orientdb
    defaults: skydive
    triggers:
      - skydive-pull-request:
          name: functional-tests-backend-orientdb
          trigger-prefix: "(all )?"
          only-trigger-phrase: false
          cancel-builds-on-update: true
    builders:
      - skydive-cleanup
      - skydive-test:
          test: BACKEND=orientdb WITH_DOCKER_VPP=true scripts/ci/run-functional-tests.sh
    publishers:
      - junit:
          results: tests.xml
      - skydive-publishers

- job:
    name: skydive-scale-tests
    defaults: skydive
    triggers:
      - skydive-pull-request:
          name: scale-tests
          trigger-prefix: "(all )?"
          only-trigger-phrase: false
          cancel-builds-on-update: true
    builders:
      - skydive-cleanup
      - skydive-test:
          test: FLOW_PROTOCOL=udp scripts/ci/run-scale.sh
      - skydive-cleanup
      - skydive-test:
          test: FLOW_PROTOCOL=websocket scripts/ci/run-scale.sh

- job:
    name: skydive-cdd-overview-tests
    defaults: skydive
    triggers:
      - skydive-pull-request:
          name: cdd-overview-tests
          trigger-prefix: "(all )?"
          only-trigger-phrase: false
          cancel-builds-on-update: true
    builders:
      - skydive-cleanup
      - skydive-test:
          test: scripts/ci/run-cdd-overview-tests.sh
    publishers:
      - archive:
          artifacts: 'src/github.com/skydive-project/skydive/tests/postmortem.png'
          allow-empty: 'true'
      - archive:
          artifacts: 'src/github.com/skydive-project/skydive/tests/overview.mp4'
          allow-empty: 'true'
      - archive:
          artifacts: 'src/github.com/skydive-project/skydive/tests/overview.gif'
          allow-empty: 'true'
      - archive:
          artifacts: 'src/github.com/skydive-project/skydive/tests/graph.json'
          allow-empty: 'true'
      - skydive-publishers

- job:
    name: skydive-release
    defaults: skydive
    triggers:
      - skydive-pull-request:
          name: release
          trigger-prefix: "deliverable "
          only-trigger-phrase: true
          cancel-builds-on-update: true
    wrappers:
      - github-credentials
      - skydive-wrappers
    builders:
      - skydive-test:
          test: scripts/ci/create-release.sh

- job:
    name: skydive-create-binaries
    defaults: skydive
    triggers:
      - skydive-pull-request:
          name: create-binaries
          trigger-prefix: "deliverable "
          only-trigger-phrase: true
          cancel-builds-on-update: true
    wrappers:
      - github-credentials
      - docker-credentials
      - skydive-wrappers
    builders:
      - skydive-test:
          test: scripts/ci/create-binaries.sh

- job:
    name: skydive-create-vagrant-boxes
    defaults: skydive
    parameters:
      - skydive-default-parameters
      - skydive-labels:
          slave-name: baremetal
      - string:
          name: PROVIDERS
          default: ""
          description: Providers to build the image for
    triggers:
      - skydive-pull-request:
          name: create-vagrant-boxes
          trigger-prefix: "deliverable "
          only-trigger-phrase: true
          cancel-builds-on-update: false
    wrappers:
      - credentials-binding:
          - text:
              credential-id: vagrantcloud-token
              variable: VAGRANTCLOUD_TOKEN
      - skydive-wrappers
    builders:
      - skydive-cleanup
      - skydive-test:
          test: scripts/ci/create-vagrant-boxes.sh

- job:
    name: skydive-create-docker-image
    defaults: skydive
    triggers:
      - skydive-pull-request:
          name: create-docker-image
          trigger-prefix: "deliverable "
          only-trigger-phrase: true
          cancel-builds-on-update: true
    builders:
      - skydive-test:
          test: scripts/ci/create-docker-image.sh
    wrappers:
      - docker-credentials
      - skydive-wrappers

- job:
    name: skydive-build-copr
    defaults: skydive
    triggers:
      - skydive-pull-request:
          name: build-copr
          trigger-prefix: "deliverable "
          only-trigger-phrase: true
          cancel-builds-on-update: true
    builders:
      - skydive-test:
          test: scripts/ci/build-copr.sh
    wrappers:
      - copr-credentials
      - skydive-wrappers

- job:
    name: skydive-devstack-tests
    defaults: skydive
    parameters:
      - skydive-default-parameters
      - skydive-labels:
          slave-name: baremetal
    triggers:
      - skydive-pull-request:
          name: devstack-tests
          trigger-prefix: "all "
          only-trigger-phrase: true
          cancel-builds-on-update: false
    builders:
      - skydive-cleanup
      - skydive-test:
          test: scripts/ci/run-devstack-tests.sh
    wrappers:
      - skydive-wrappers

- job:
    name: skydive-kolla-tests
    defaults: skydive
    parameters:
      - skydive-default-parameters
      - skydive-labels:
          slave-name: baremetal
    triggers:
      - skydive-pull-request:
          name: kolla-tests
          trigger-prefix: "all "
          only-trigger-phrase: true
          cancel-builds-on-update: false
    builders:
      - skydive-cleanup
      - skydive-test:
          test: scripts/ci/run-kolla-tests.sh
    wrappers:
      - skydive-wrappers

- job:
    name: skydive-vagrant-tests
    defaults: skydive
    parameters:
      - skydive-default-parameters
      - skydive-labels:
          slave-name: baremetal
      - string:
          name: DEVMODE
          default: "true"
          description: Use built binary, package and docker image
      - string:
          name: MODES
          default: "binary package container"
    triggers:
      - skydive-pull-request:
          name: vagrant-tests
          trigger-prefix: "all "
          only-trigger-phrase: true
          cancel-builds-on-update: false
    builders:
      - skydive-cleanup
      - skydive-test:
          test: VAGRANT_DEFAULT_PROVIDER=libvirt scripts/ci/run-vagrant-tests.sh
    wrappers:
      - skydive-wrappers

- job:
    name: skydive-selinux-tests
    defaults: skydive
    parameters:
      - skydive-default-parameters
      - skydive-labels:
          slave-name: baremetal
      - string:
          name: DEVMODE
          default: "true"
          description: Use built binary, package and docker image
    triggers:
      - skydive-pull-request:
          name: selinux-tests
          trigger-prefix: "all "
          only-trigger-phrase: true
          cancel-builds-on-update: false
    builders:
      - skydive-cleanup
      - skydive-test:
          test: VAGRANT_DEFAULT_PROVIDER=libvirt scripts/ci/run-selinux-tests.sh
    wrappers:
      - skydive-wrappers

- job:
    name: skydive-packaging-tests
    defaults: skydive
    triggers:
      - skydive-pull-request:
          name: packaging-tests
          trigger-prefix: "all "
          only-trigger-phrase: true
          cancel-builds-on-update: true
    builders:
      - skydive-test:
          test: scripts/ci/run-packaging-tests.sh

- job:
    name: skydive-python-tests
    defaults: skydive
    triggers:
      - skydive-pull-request:
          name: python-tests
          trigger-prefix: "all "
          only-trigger-phrase: true
          cancel-builds-on-update: true
    builders:
      - skydive-cleanup
      - skydive-test:
          test: scripts/ci/run-python-tests.sh

- job:
    name: skydive-coverage
    defaults: skydive
    parameters:
      - skydive-default-parameters
      - skydive-labels:
          slave-name: baremetal
    triggers:
      - skydive-pull-request:
          name: coverage
          trigger-prefix: "all "
          only-trigger-phrase: true
          cancel-builds-on-update: true
    builders:
      - skydive-cleanup
      - skydive-test:
          test: scripts/ci/run-coverage.sh
    wrappers:
      - coverage-credentials
      - skydive-wrappers
    publishers:
      - publish-cobertura
      - skydive-publishers

- trigger:
    name: skydive-github-trigger
    triggers:
      - github

- job:
    name: skydive-create-deliverables
    project-type: multijob
    defaults: skydive
    parameters:
      - skydive-parameters:
          repository: https://github.com/skydive-project/skydive
          ref: ""
          refspec: "+refs/tags/*:refs/remotes/origin/tags/*"
          dry-run: ""
          keep-resources: ""
    scm:
      - skydive-github:
          repository: "https://github.com/skydive-project/skydive"
          ref: ""
          refspec: "+refs/tags/*:refs/remotes/origin/tags/*"
    triggers:
      - skydive-github-trigger
    builders:
      - multijob:
          name: skydive-create-deliverables
          condition: SUCCESSFUL
          projects:
            - name: skydive-create-docker-image
              current-parameters: true
              git-revision: true
            - name: skydive-build-copr
              current-parameters: true
              git-revision: true
            - name: skydive-create-vagrant-boxes
              current-parameters: true
              git-revision: true
      - multijob:
          name: skydive-create-release
          condition: SUCCESSFUL
          projects:
            - name: skydive-release
              current-parameters: true
              git-revision: true

- job:
    name: skydive-create-deliverables-trunk
    project-type: multijob
    defaults: skydive
    parameters:
      - skydive-parameters:
          repository: https://github.com/skydive-project/skydive
          ref: "refs/heads/master"
          refspec: "+refs/heads/*:refs/remotes/origin/*"
          dry-run: ""
          keep-resources: ""
    scm:
      - skydive-github:
          repository: "https://github.com/skydive-project/skydive"
          ref: "refs/heads/master"
          refspec: "+refs/heads/*:refs/remotes/origin/*"
    triggers:
      - timed: "@midnight"
    builders:
      - multijob:
          name: skydive-create-deliverables
          condition: SUCCESSFUL
          projects:
            - name: skydive-create-binaries
              current-parameters: true
              git-revision: true
            - name: skydive-create-docker-image
              current-parameters: true
              git-revision: true
              predefined-parameters: REF=latest
            - name: skydive-create-vagrant-boxes
              current-parameters: true
              git-revision: true
    publishers:
      - skydive-publishers
      - email:
          recipients: skydivesoftware@gmail.com

- job:
    name: skydive-ppc64le-tests
    defaults: skydive
    parameters:
      - skydive-default-parameters
      - skydive-labels:
          slave-name: ppc64le
    triggers:
      - skydive-pull-request:
          name: ppc64le-tests
          trigger-prefix: "ppc64le "
          only-trigger-phrase: true
          cancel-builds-on-update: true
    builders:
      - skydive-test:
          test: scripts/ci/run-unit-tests.sh
      - skydive-cleanup
      - skydive-test:
          test: scripts/ci/run-scale.sh
      - skydive-cleanup
      - skydive-test:
          test: BACKEND=elasticsearch scripts/ci/run-functional-tests.sh
    publishers:
      - junit:
          results: tests.xml
      - skydive-publishers

- job:
    name: skydive-functional-hw-tests
    defaults: skydive
    parameters:
      - skydive-default-parameters
      - skydive-labels:
          slave-name: sriov
    triggers:
      - skydive-pull-request:
          name: functional-hw-tests
          trigger-prefix: "(all )?"
          only-trigger-phrase: false
          cancel-builds-on-update: true
    builders:
      - skydive-cleanup
      - skydive-test:
          test: scripts/ci/run-hw-functional-tests.sh
    publishers:
      - junit:
          results: tests.xml
      - skydive-publishers
